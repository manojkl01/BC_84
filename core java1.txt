Condition statements,  scanner class:
package com.thbs;

import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
	// write your code
        int year,fl=0;
        Scanner sc=new Scanner(System.in);
        year=sc.nextInt();
        if(year%400==0||year%4==0){
            fl=1;
        }
        else if (year%100==0){
            fl=0;
        }
        else{
            fl=0;
        }
        if (fl==1){
            System.out.println(year+" is a leap year");
        }
        else{
            System.out.println(year+" is not a leap year");
        }
    }
}
OUTPUT:   2016
2016 is a leap year

2. command line arguments:
public class Main {

    public static void main(String[] args) {
	// write your code here
        System.out.println(Integer.parseInt(args[0]));
        for(int i=0;++i<=2;i++){
            System.out.print(args[i]+" ");
        }
OUTPUT:  40
50

3. pre increment and post increment
public class Main {

    public static void main(String[] args) {
	// write your code here
//        System.out.println(Integer.parseInt(args[0]));
        System.out.print("Pre Increment: \n");
        for(int i=0;++i<=10;i++){
            System.out.print(i+" ");
        }
        System.out.println("Post increment: \n");
        for(int i=0;i++<=10;i++){
            System.out.print(i+" ");
        }

OUTPUT:        Pre Increment: 
1 3 5 7 9 
Post increment: 
1 3 5 7 9 11 

4.bubble sort:
 int a1[]={14,12,10,8,6,4},temp=0;
        for (int i=0;i<a1.length;i++){
            for(int j=0;j<a1.length-1;j++){
                if(a1[i]<a1[j]){
                    temp=a1[i];
                    a1[i]=a1[j];
                    a1[j]=temp;
                }
            }
        }
        for (int i=0;i<a1.length;i++)
            System.out.println(a1[i]);
        System.out.println("max no. is: "+(a1[a1.length-1]));
    }
}
OUTPUT:    4
6
8
10
12
14
max no. is: 14

5. creating a class and its object with constructors:
public class Person {
    int n;
    String name;
    static int count=0;

    public Person(int n, String name) {
        this.n = n;
        this.name = name;
        ++count;
    }

    @Override
    public String toString() {
        return "Person{" +
                "n=" + n +
                ", name='" + name + '\'' +
                '}';
    }

    public int getCount(){
        return count;
    }
}
public class Main {

    public static void main(String[] args) {
	// write your code here
        Person p1=new Person(111, "Manoj");
        Person p2=new Person(112, "kishan");

        System.out.println(Person.count+"\n"+p1+"\n"+p2);

    }
}
OUTPUT:     2
Person{n=111, name='Manoj'}
Person{n=112, name='kishan'}


5.   constructors in class:

package com.thbs.account;
import java.util.Random;
public class Account {
    private static long count;
    private final long acc_no;
    private String acc_type;
    private double balance;

    static{
        count=0;
    }

    public Account(String acc_type,double balance) {
        this.acc_no=getCount();
        this.acc_type=acc_type;
        this.balance = balance;
    }

    @Override
    public String toString() {
        return "Account{" +
                "acc_no=" + acc_no +
                ", acc_type='" + acc_type + '\'' +
                ", balance=" + balance +
                '}';
    }

    public static long getCount() {
        Random ran=new Random();
        count=ran.nextInt(2000)+2000;
        return count;
    }

    public double deposit(double amt){
        balance+=amt;
        return (balance);
    }

    public String withdraw(double amt){
        if (balance>=amt)
            return "balance left is: "+(balance-=amt);

        else
            return "Sorry your balance is:"+balance;
    }

}
public class Main {

    public static void main(String[] args) {
	// write your code here
        Account acc1=new Account("SB Account",50000);
        Account acc2=new Account("Salary A/c", 60000);

        System.out.println(acc1);
        System.out.println("Withdrawn, "+acc1.withdraw(10000));
        System.out.println("deposit, now balance is: "+acc1.deposit(5000));
        System.out.println(acc1);
        System.out.println();
        System.out.println(acc2);
        System.out.println("Withdrawn, "+acc2.withdraw(100000));
        System.out.println("deposit, now balance is: "+acc2.deposit(5000));
    }
}
OUTPUT:   Account{acc_no=3588, acc_type='SB Account', balance=50000.0}
Withdrawn, balance left is: 40000.0
deposit, now balance is: 45000.0
Account{acc_no=3588, acc_type='SB Account', balance=45000.0}

Account{acc_no=2064, acc_type='Salary A/c', balance=60000.0}
Withdrawn, Sorry your balance is:60000.0
deposit, now balance is: 65000.0


OOPS concepts Data encapsulation:
package com.thbs;
public class Recahrge {
    int ph_id;
    String cus_name;
    String operator;
    private long phone_no;
    int amt;

    public Recahrge(int ph_id, String cus_name, String operator, long phone_no, int amt) {
        this.ph_id = ph_id;
        this.cus_name = cus_name;
        this.operator = operator;
        this.phone_no = phone_no;
        this.amt = amt;
    }

    public void display(){
        System.out.println("Id: "+ph_id+"\nname: "+cus_name+"\noperator: "+operator+
        "\nRecahrge amt: "+amt);
    }
}
public class Main{
        public static void main(String args[]){
		Recahrge r=new Recahrge(001,"Shwetha", "JIO",1234567890, 499);
        r.display();


    }
}
OUTPUT:     Id: 1
name: Shwetha
operator: JIO
Recahrge amt: 499

